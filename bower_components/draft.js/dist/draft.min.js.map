{"version":3,"sources":["draft.min.js","draft.js"],"names":["root","factory","define","amd","exports","module","draft","this","_possibleConstructorReturn","self","call","ReferenceError","_inherits","subClass","superClass","TypeError","prototype","Object","create","constructor","value","enumerable","writable","configurable","setPrototypeOf","__proto__","_classCallCheck","instance","Constructor","_typeof","obj","Symbol","_defineProperty","key","defineProperty","_get","get","object","property","receiver","Function","desc","getOwnPropertyDescriptor","undefined","parent","getPrototypeOf","getter","_createClass","defineProperties","target","props","i","length","descriptor","protoProps","staticProps","name","doc","types","mixins","transforms","createTransform","mixin","_len","arguments","args","Array","_key","transform","apply","concat","inherit","destination","source","properties","isArray","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","iterator","next","done","val","err","hasOwnProperty","proxy","defaults","dpi","test","document","createElement","style","width","padding","getElementsByTagName","appendChild","offsetWidth","removeChild","Float","parseFloat","unit","Length","_draft$types$Float","_this","isNaN","convert","RegExp","regex","exec","toLowerCase","newUnit","_this2","chain","reverse","units","toString","px","pt","pc","in","ft","yd","mi","mm","cm","dm","m","km","Color","color","parseInt","repeat","red","green","blue","rgbColor","rgb","hexColor","hex","replace","event","on","evt","listener","listenersMap","getListeners","listeners","map","l","indexOf","push","once","off","index","lastIndexOf","splice","fire","response","timeStamp","Date","type","defineEvent","_len2","evts","_key2","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","removeEvent","events","_getEvents","_events","_transform","_len3","_key3","arg","prop","translate","position","rotate","angle","orientation","currVal","scale","size","skew","system","_system","fill","fillColor","fillOpacity","opacity","stroke","strokeColor","strokeOpacity","strokeWidth","Element","_metadata","_properties","_type","_prop","String","setter","p","_unit","blacklist","replacer","JSON","stringify","id","children","_id","Math","max","config","Class","_ref","Group","append","_config$construct","_len4","_key4","construct","_draft$Element","_this4","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","_child","meta","child","elements","add","group","Doc","_draft$Group","_this5","newDoc","docs","View","_draft$Element2","height","gcd","a","b","view","Point","_draft$Element3","point","Line","_draft$Point","_get2","line","Shape","extend","Rectangle","rekt","floor","random","rect","rectangle","Square","Ellipse","Circle","radius","r"],"mappings":"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","file":"draft.min.js","sourcesContent":[null,"/*\n * draft.js - A lightweight library for parametric design\n * version v0.2.0\n * http://draft.js.org\n *\n * copyright Jordi Pakey-Rodriguez <me@jordi.codes>\n * license MIT\n *\n * BUILT: Sat Feb 27 2016 03:30:18 GMT-0600 (CST)\n */\n\n;(function(root, factory) {\n  if (typeof define === 'function' && define.amd) {\n    define([], factory);\n  } else if (typeof exports === 'object') {\n    module.exports = factory();\n  } else {\n    root.draft = factory();\n  }\n}(this, function() {\n'use strict';\n\nvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\nvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _typeof(obj) { return obj && typeof Symbol !== \"undefined\" && obj.constructor === Symbol ? \"symbol\" : typeof obj; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nvar draft = function draft(name) {\n  return draft.doc(name);\n};\n\n// Initialize types and mixins\ndraft.types = {};\ndraft.mixins = {};\ndraft.transforms = {};\n\n// TODO: prefer operators at beginning of lines?\n\n// TODO: come up with a better location/interface for createTransform()\ndraft.createTransform = function createTransform(name) {\n  var mixin = _defineProperty({}, name, Object.defineProperty(function () {\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return this.transform.apply(this, [name].concat(args));\n  }, 'name', {\n    configurable: true,\n    value: name\n  }));\n\n  return mixin[name];\n};\n\n// These methods are adapted from Oliver Caldwell's Heir script, which he has\n// released under the Unlicense (public domain).\n// GitHub Repository: https://github.com/Olical/Heir\n\ndraft.inherit = function inherit(destination, source, properties) {\n  destination.prototype = Object.create(source.prototype, properties);\n  destination.prototype.constructor = destination;\n  // destination._super = source.prototype;\n};\n\ndraft.mixin = function mixin(destination, source) {\n  if (Array.isArray(source)) {\n    var _iteratorNormalCompletion = true;\n    var _didIteratorError = false;\n    var _iteratorError = undefined;\n\n    try {\n      for (var _iterator = source[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n        var val = _step.value;\n\n        draft.mixin(destination, val);\n      }\n    } catch (err) {\n      _didIteratorError = true;\n      _iteratorError = err;\n    } finally {\n      try {\n        if (!_iteratorNormalCompletion && _iterator.return) {\n          _iterator.return();\n        }\n      } finally {\n        if (_didIteratorError) {\n          throw _iteratorError;\n        }\n      }\n    }\n  } else if (typeof source == 'string') {\n    draft.mixin(destination, draft.mixins[source]);\n  } else if ((typeof source === 'undefined' ? 'undefined' : _typeof(source)) == 'object') {\n    for (var key in source) {\n      if (source.hasOwnProperty(key)) {\n        destination.prototype[key] = source[key];\n      }\n    }\n  }\n};\n\n// Fallback proxy function for non-ES6 browsers\ndraft.proxy = function proxy(obj) {\n  return obj;\n};\n\n// TODO: configurable defaults\ndraft.defaults = draft.proxy({\n  get dpi() {\n    var test = document.createElement('div');\n    test.style.width = '1in';\n    test.style.padding = 0;\n    document.getElementsByTagName('body')[0].appendChild(test);\n\n    var dpi = test.offsetWidth;\n\n    document.getElementsByTagName('body')[0].removeChild(test);\n\n    // Fall back to standard 96dpi resolution\n    return dpi || 96;\n  }\n});\n\ndraft.types.Float = (function () {\n  function Float(value) {\n    _classCallCheck(this, Float);\n\n    this.value = parseFloat(value);\n  }\n\n  _createClass(Float, [{\n    key: 'valueOf',\n    value: function valueOf() {\n      return this.value;\n    }\n  }, {\n    key: 'type',\n    get: function get() {\n      return 'float';\n    }\n  }, {\n    key: 'regex',\n    get: function get() {\n      // Matches all floating point values. Should match:\n      // 123\n      // -123.45\n      // 123e5\n      // 123.45E+5\n      return '[-+]?[0-9]*\\\\.?[0-9]+(?:[eE][-+]?[0-9]+)?';\n    }\n  }]);\n\n  return Float;\n})();\n\ndraft.types.float = function float(value) {\n  return value == undefined ? value : new draft.types.Float(value);\n};\n\ndraft.defaults.unit = 'px';\n\n// TODO: make type, regex, units, and test static\ndraft.types.Length = (function (_draft$types$Float) {\n  _inherits(Length, _draft$types$Float);\n\n  function Length(value, unit) {\n    _classCallCheck(this, Length);\n\n    var _this = _possibleConstructorReturn(this, Object.getPrototypeOf(Length).call(this, value));\n\n    value = _this.test(value);\n    unit = _this.test(unit);\n\n    if (!isNaN(_this.value) && (value || unit)) {\n      _this.unit = value || unit;\n      _this.convert(unit);\n    } else {\n      _this.unit = draft.defaults.unit;\n    }\n    return _this;\n  }\n\n  _createClass(Length, [{\n    key: 'test',\n    value: function test(val) {\n      // TODO: strict match anchor (^ instead of word end)\n      val = new RegExp(this.regex + '$', 'i').exec(val);\n      return val ? val[0].toLowerCase() : false;\n    }\n  }, {\n    key: 'convert',\n    value: function convert(newUnit) {\n      var _this2 = this;\n\n      newUnit = this.test(newUnit);\n\n      if (!newUnit) {\n        return false;\n      }\n\n      var chain = function chain(unit, reverse) {\n        var units = _this2.units[unit];\n\n        _this2.value *= reverse ? units[1] : units[0];\n        _this2.value /= reverse ? units[0] : units[1];\n\n        return units[2];\n      };\n\n      var unit = this.unit;\n      while (unit !== newUnit && unit !== 'px') {\n        unit = chain(unit);\n      }\n\n      if (unit !== newUnit) {\n        unit = newUnit;\n        while (unit !== 'px') {\n          unit = chain(unit, true);\n        }\n      }\n\n      this.unit = newUnit;\n\n      return this.toString();\n    }\n  }, {\n    key: 'valueOf',\n    value: function valueOf() {\n      // TODO: use px instead of draft.defaults.unit?\n      return new Length(this.toString(), draft.defaults.unit).value;\n    }\n  }, {\n    key: 'toString',\n    value: function toString() {\n      return this.value + this.unit;\n    }\n  }, {\n    key: 'type',\n    get: function get() {\n      return 'length';\n    }\n  }, {\n    key: 'regex',\n    get: function get() {\n      return '(px|pt|pc|in|ft|yd|mi|mm|cm|dm|km|m)';\n    }\n  }, {\n    key: 'units',\n    get: function get() {\n      return {\n        px: [1, 1, 'px'],\n        pt: [1, 72, 'px'],\n        pc: [12, 1, 'pt'],\n        in: [draft.defaults.dpi, 1, 'px'],\n        ft: [12, 1, 'in'],\n        yd: [3, 1, 'ft'],\n        mi: [1760, 1, 'yd'],\n        mm: [1, 25.4, 'in'],\n        cm: [10, 1, 'mm'],\n        dm: [10, 1, 'cm'],\n        m: [10, 1, 'dm'],\n        km: [1000, 1, 'm']\n      };\n    }\n  }]);\n\n  return Length;\n})(draft.types.Float);\n\ndraft.types.length = function length(value, unit) {\n  return value == undefined ? value : new draft.types.Length(value, unit);\n};\n\ndraft.types.Color = (function () {\n  function Color(color) {\n    _classCallCheck(this, Color);\n\n    color = new RegExp('^(?:' + this.regex + ')$', 'i').exec(isNaN(color) ? color : color.toString(16));\n\n    if (color !== null) {\n      this.color = color[0].toLowerCase();\n\n      for (var i = 1; i <= 3; i++) {\n        color[i] = parseInt(color[i] || parseInt(color[i + 3] || color[i + 6].repeat(2), 16), 10);\n      }\n\n      this.red = color[1];\n      this.green = color[2];\n      this.blue = color[3];\n    }\n  }\n\n  _createClass(Color, [{\n    key: 'valueOf',\n    value: function valueOf() {\n      return this.red << 16 | this.green << 8 | this.blue;\n    }\n  }, {\n    key: 'toString',\n    value: function toString() {\n      return this.color;\n    }\n  }, {\n    key: 'type',\n    get: function get() {\n      return 'color';\n    }\n  }, {\n    key: 'regex',\n    get: function get() {\n      var rgbColor = '([01]?[0-9][0-9]?|2[0-4][0-9]|25[0-5])';\n      var rgb = 'rgb\\\\(' + rgbColor + ', ?' + rgbColor + ', ?' + rgbColor + '\\\\)';\n\n      var hexColor = '([0-9a-f]{2})'.repeat(3);\n      var hex = '#?(?:' + hexColor + '|' + hexColor.replace(/\\{2\\}/g, '') + ')';\n      // var hex = '#?(?:[0-9a-f]{3}){1,2}';\n\n      return rgb + '|' + hex;\n    }\n  }]);\n\n  return Color;\n})();\n\ndraft.types.color = function color(value) {\n  return value == undefined ? value : new draft.types.Color(value);\n};\n\n// These methods are adapted from Oliver Caldwell's EventEmitter library, which\n// he has released under the Unlicense (public domain).\n// GitHub Repository: https://github.com/Olical/EventEmitter\n\ndraft.mixins.event = {\n  on: function on(evt, listener) {\n    var listenersMap = this.getListeners(evt, true);\n\n    for (var key in listenersMap) {\n      var listeners = listenersMap[key];\n\n      if (!(listeners.map(function (l) {\n        return l.listener;\n      }).indexOf(listener) !== -1)) {\n        listeners.push((typeof listener === 'undefined' ? 'undefined' : _typeof(listener)) == 'object' ? listener : {\n          listener: listener,\n          once: false\n        });\n      }\n    }\n\n    return this;\n  },\n  once: function once(evt, listener) {\n    return this.on(evt, {\n      listener: listener,\n      once: true\n    });\n  },\n  off: function off(evt, listener) {\n    var listenersMap = this.getListeners(evt, true);\n\n    for (var key in listenersMap) {\n      var listeners = listenersMap[key];\n      var index = listeners.map(function (l) {\n        return l.listener;\n      }).lastIndexOf(listener);\n\n      if (index !== -1) {\n        listeners.splice(index, 1);\n      }\n    }\n\n    return this;\n  },\n\n  // TODO: use rest for args (...args)\n  fire: function fire(evt, args) {\n    // Put args in an array if it isn't already one\n    if (!Array.isArray(args)) {\n      args = [args];\n    }\n\n    var listenersMap = this.getListeners(evt, true);\n\n    for (var key in listenersMap) {\n      var listeners = listenersMap[key];\n      var i = listeners.length;\n\n      /* if (i > 0) {\n        console.info(`${this.domID} ${key}:`, args.map(arg => String(arg)));\n      } */\n\n      while (i--) {\n        var listener = listeners[i];\n        var response = listener.listener.apply({\n          target: this,\n          timeStamp: Date(),\n          type: key\n        }, args);\n\n        // If the listener returns 'off' then it gets removed from the event\n        if (listener.once === true || response === 'off') {\n          this.off(evt, listener.listener);\n        }\n      }\n    }\n\n    return this;\n  },\n  defineEvent: function defineEvent() {\n    for (var _len2 = arguments.length, evts = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      evts[_key2] = arguments[_key2];\n    }\n\n    var _iteratorNormalCompletion2 = true;\n    var _didIteratorError2 = false;\n    var _iteratorError2 = undefined;\n\n    try {\n      for (var _iterator2 = evts[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n        var evt = _step2.value;\n\n        this.getListeners(evt);\n      }\n    } catch (err) {\n      _didIteratorError2 = true;\n      _iteratorError2 = err;\n    } finally {\n      try {\n        if (!_iteratorNormalCompletion2 && _iterator2.return) {\n          _iterator2.return();\n        }\n      } finally {\n        if (_didIteratorError2) {\n          throw _iteratorError2;\n        }\n      }\n    }\n\n    return this;\n  },\n  removeEvent: function removeEvent(evt) {\n    var events = this._getEvents();\n\n    // Remove different things depending on the state of evt\n    if (typeof evt == 'string') {\n      // Remove all listeners for the specified event\n      delete events[evt];\n    } else if (evt instanceof RegExp) {\n      // Remove all events matching the regex.\n      for (var key in events) {\n        if (evt.test(key)) {\n          delete events[key];\n        }\n      }\n    } else {\n      // Remove all listeners in all events\n      delete this._events;\n    }\n\n    return this;\n  },\n  getListeners: function getListeners(evt, map) {\n    var events = this._getEvents();\n    var listeners = {};\n\n    // Return a concatenated array of all matching events if\n    // the selector is a regular expression.\n    if (evt instanceof RegExp) {\n      for (var key in events) {\n        if (evt.test(key)) {\n          listeners[key] = events[key];\n        }\n      }\n    } else {\n      var listener = events[evt] || (events[evt] = []);\n\n      if (map === undefined) {\n        listeners = listener;\n      } else {\n        listeners[evt] = listener;\n      }\n    }\n\n    /* if (map !== undefined) {\n      listeners = Object.keys(listeners).map(key => listeners[key]);\n    } */\n\n    return listeners;\n  },\n\n  /**\n   * Fetches the events object and creates one if required.\n   *\n   * @return {Object} The events storage object.\n   * @api private\n   */\n  _getEvents: function _getEvents() {\n    return this._events || (this._events = {});\n  }\n};\n\ndraft.mixins.transform = {\n  transform: function transform(_transform) {\n    var obj = {\n      transform: _transform,\n      args: {}\n    };\n    _transform = draft.transforms[_transform];\n\n    for (var _len3 = arguments.length, args = Array(_len3 > 1 ? _len3 - 1 : 0), _key3 = 1; _key3 < _len3; _key3++) {\n      args[_key3 - 1] = arguments[_key3];\n    }\n\n    for (var arg in args) {\n      var prop = _transform.args[arg];\n      obj.args[prop] = args[arg];\n\n      if (this.map.indexOf(prop) !== -1) {\n        var val = _transform.transform.call(this, prop, args[arg]);\n        this.prop(prop, val);\n      }\n    }\n\n    this.transforms.push(obj);\n    this.fire('transform:' + obj.transform, obj);\n\n    return this;\n  }\n};\n\ndraft.transforms.translate = {\n  args: ['x', 'y', 'z'],\n  transform: function transform(prop, val) {\n    val = draft.types.length(val || 0);\n    return draft.types.length((this.prop(prop) || 0) + val, this.unit());\n  }\n};\n\ndraft.transforms.position = {\n  args: draft.transforms.translate.args,\n  transform: function transform(prop, val) {\n    return draft.types.length(val || 0, this.unit());\n  }\n};\n\ndraft.mixins.translate = {\n  translate: draft.createTransform('translate'),\n  position: draft.createTransform('position')\n};\n\ndraft.transforms.rotate = {\n  args: ['alpha', 'beta', 'gamma', 'order'],\n  transform: function transform(prop, val) {\n    val = draft.types.angle(val || 0);\n    return draft.types.angle((this.prop(prop) || 0) + val, this.defaults.angle);\n  }\n};\n\ndraft.transforms.orientation = {\n  args: draft.transforms.rotate.args,\n  transform: function transform(prop, currVal, val) {\n    return draft.types.angle(val || 0, this.defaults.angle);\n  }\n};\n\ndraft.mixins.rotate = {\n  rotate: draft.createTransform('rotate'),\n  orientation: draft.createTransform('orientation')\n};\n\ndraft.transforms.scale = {\n  args: ['width', 'height', 'length'],\n  transform: function transform(prop, val) {\n    val = parseFloat(val) || 1;\n    return draft.types.length((this.prop(prop) || 0) * val, this.unit());\n  }\n};\n\ndraft.transforms.size = {\n  args: draft.transforms.scale.args,\n  transform: function transform(prop, val) {\n    return draft.types.length(val || 0, this.unit());\n  }\n};\n\ndraft.mixins.scale = {\n  scale: draft.createTransform('scale'),\n  size: draft.createTransform('size')\n};\n\ndraft.transforms.skew = {\n  args: ['skewX', 'skewY', 'skewZ'],\n  transform: function transform(prop, val) {\n    return parseFloat(val) || 0;\n  }\n};\n\ndraft.mixins.skew = {\n  skew: draft.createTransform('skew')\n};\n\ndraft.mixins.system = {\n  // Cartesian:\n  // - page.system('cartesian')\n  // - (x, y)\n  // - x is right, y is up, z is out of the page (right-hand)\n  // - global origin (0, 0) is at bottom-left\n  //\n  // Polar:\n  // - page.system('polar')\n  // - (r, φ)\n  // - φ is counter-clockwise, with 0 pointing to the right\n  // - global pole (0, 0) is at center\n  //\n  // BACKLOG:30 remove svg coordinates?\n  // Web/SVG:\n  // - page.system('web')\n  // - (x, y)\n  // - x is right, y is down, z is out of the page (left-hand)\n  // - global origin (0, 0) is at top-left\n\n  // BACKLOG:10 switch φ for θ?\n  // BACKLOG:0 Spherical (ρ, θ, φ), Cylindrical (ρ, φ, z)\n\n  system: function system(_system) {\n    /* if (this.prop('system') != system) {\n      // BACKLOG:20 recursively convert all elements to new system?\n    } */\n    return this.prop('system', _system);\n  }\n};\n\ndraft.defaults.system = 'cartesian';\n\ndraft.mixins.fill = {\n  // TODO: combine color and opacity into fill()\n\n  fill: function fill(color) {\n    return this.fillColor(color);\n  },\n  fillColor: function fillColor(color) {\n    return this.prop('fill.color', draft.types.color(color));\n  },\n  fillOpacity: function fillOpacity(opacity) {\n    // TODO: move into generic function?\n    if (/^(0(\\.\\d*)?|1(\\.0*)?)$/.test(opacity)) {\n      opacity = parseFloat(opacity, 10);\n    }\n\n    return this.prop('fill.opacity', opacity);\n  }\n};\n\ndraft.defaults['fill.color'] = '#fff';\ndraft.defaults['fill.opacity'] = 0;\n\ndraft.mixins.stroke = {\n  // TODO: combine color, opacity, and width into stroke()\n\n  stroke: function stroke(color) {\n    return this.strokeColor(color);\n  },\n  strokeColor: function strokeColor(color) {\n    return this.prop('stroke.color', draft.types.color(color));\n  },\n  strokeOpacity: function strokeOpacity(opacity) {\n    // TODO: move into generic function?\n    if (/^(0(\\.\\d*)?|1(\\.0*)?)$/.test(opacity)) {\n      opacity = parseFloat(opacity, 10);\n    }\n\n    return this.prop('stroke.opacity', opacity);\n  },\n  strokeWidth: function strokeWidth(width) {\n    return this.prop('stroke.width', draft.types.length(width));\n  }\n};\n\ndraft.defaults['stroke.color'] = '#000';\ndraft.defaults['stroke.opacity'] = 1;\ndraft.defaults['stroke.width'] = 1;\n\n// let _type = new WeakMap();\n// let _id = new WeakMap();\n\ndraft.Element = (function () {\n  function Element(name) {\n    _classCallCheck(this, Element);\n\n    // Make sure _metadata and _properties are initialized\n    this._metadata = {\n      name: name\n    };\n    this._properties = {};\n    this.transforms = [];\n\n    // HACK:0 use this.constructor.name to get an element's type. Requires all\n    // subclasses to have a defined constructor.\n    for (var type in draft) {\n      if (this.constructor === draft[type]) {\n        this._type = type.toLowerCase();\n        // _type.set(this, type.toLowerCase());\n        break;\n      }\n    }\n    if (!this._type) {\n      this._type = this.constructor.name;\n    }\n  }\n\n  /* static inherit(source, addSuper) {\n    draft.inherit(this, source, addSuper);\n  } */\n\n  _createClass(Element, [{\n    key: 'prop',\n    value: function prop(_prop, val) {\n      if (_prop === undefined) {\n        // Act as a full properties getter if prop is undefined\n        return this._properties;\n      } else if (_prop === null) {\n        // Delete all properties if prop is null\n        this._properties = {};\n      } else if (typeof _prop == 'string') {\n        var props = draft.proxy(this._properties);\n\n        if (val === undefined) {\n          // Act as an individual property getter if val is undefined\n          // TODO: do a fuzzy-find? For example, el.prop('width') would match\n          // el._properties.size.width if el._properties.width is undefined\n          return _prop in props ? props[_prop] : null;\n        } else if (val === null) {\n          // Delete the property if val is null\n          delete props[_prop];\n          this.fire('change', [_prop, val]);\n        } else if (props[_prop] !== val) {\n          // Act as an individual property setter if both prop and val are defined\n\n          // TODO: let properties be objects (don't stringify)\n          if (val.type === 'color') {\n            val = String(val);\n          }\n\n          props[_prop] = val;\n          this.fire('change', [_prop, val]);\n        }\n      } else if ((typeof _prop === 'undefined' ? 'undefined' : _typeof(_prop)) == 'object') {\n        // Act as a getter if prop is an object with only null values.\n        // Act as a setter if prop is an object with at least one non-null value.\n        var setter = false;\n\n        for (var p in _prop) {\n          // Get this._properties[p] and save it to prop[p]\n          _prop[p] = this.prop(p, _prop[p]);\n          // If the returned value is an object, prop[p] is non-null, so act like\n          // a setter.\n          setter = setter || _typeof(_prop[p]) == 'object';\n        }\n\n        return setter ? this : _prop;\n      }\n\n      // Chainable if 'this' is returned\n      return this;\n    }\n\n    // Get/set the element's default length unit\n\n  }, {\n    key: 'unit',\n    value: function unit(_unit) {\n      return this.prop('unit', _unit);\n    }\n\n    // TODO: use rest (...blacklist) for multiple blacklist items?\n\n  }, {\n    key: 'stringify',\n    value: function stringify(blacklist) {\n      var replacer;\n\n      if (Array.isArray(blacklist)) {\n        replacer = function (key, val) {\n          if (blacklist.indexOf(key) !== -1) {\n            return undefined;\n          }\n\n          return val;\n        };\n      } else if (blacklist instanceof RegExp) {\n        replacer = function (key, val) {\n          if (blacklist.test(key)) {\n            return undefined;\n          }\n\n          return val;\n        };\n      }\n\n      return JSON.stringify(this, replacer, 2);\n    }\n  }, {\n    key: 'toJSON',\n    value: function toJSON() {\n      return {\n        type: this.type,\n        id: this.id,\n        properties: this.prop(),\n        children: this.children\n      };\n    }\n  }, {\n    key: 'type',\n    get: function get() {\n      return this._type;\n      // return _type.get(this);\n    }\n  }, {\n    key: 'id',\n    get: function get() {\n      return this._id;\n      // return _id.get(this);\n    }\n\n    // Construct a unique ID from the element's type and ID\n\n  }, {\n    key: 'domID',\n    get: function get() {\n      var id = String(this.id);\n\n      // TODO: make the domID digit length configurable\n      return this.type + '_' + '0'.repeat(Math.max(4 - id.length, 0)) + id;\n    }\n  }, {\n    key: 'meta',\n    get: function get() {\n      return this._metadata;\n    }\n  }], [{\n    key: 'extend',\n    value: function extend(name, config, parent) {\n      var Class = (function (_ref) {\n        _inherits(Class, _ref);\n\n        function Class() {\n          _classCallCheck(this, Class);\n\n          return _possibleConstructorReturn(this, Object.getPrototypeOf(Class).call(this));\n\n          /* if ('construct' in config) {\n            super();\n            // config.construct.call(this, ...args);\n          } else {\n            super(...args);\n          } */\n        }\n\n        _createClass(Class, [{\n          key: 'foo',\n          value: function foo() {\n            return 'foo';\n          }\n        }, {\n          key: 'getter',\n          get: function get() {\n            return 'get';\n          }\n        }]);\n\n        return Class;\n      })(this);\n\n      Object.defineProperty(Class, 'name', {\n        configurable: true,\n        value: name\n      });\n\n      var mixin = function mixin(destination, source) {\n        for (var prop in source) {\n          if (prop === 'static') {\n            mixin(destination.constructor, source.static);\n          } else if (prop !== 'construct') {\n            var descriptor = Object.getOwnPropertyDescriptor(source, prop);\n            descriptor.enumerable = false;\n\n            Object.defineProperty(destination, prop, descriptor);\n          }\n        }\n      };\n\n      mixin(Class.prototype, config);\n\n      if (parent !== null) {\n        (parent || draft.Group).mixin(_defineProperty({}, name.toLowerCase(), function () {\n          var instance = this.append(new Class());\n          if ('construct' in config) {\n            var _config$construct;\n\n            for (var _len4 = arguments.length, args = Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n              args[_key4] = arguments[_key4];\n            }\n\n            (_config$construct = config.construct).call.apply(_config$construct, [instance].concat(args));\n          }\n          return instance;\n        }));\n      }\n\n      return Class;\n    }\n  }, {\n    key: 'mixin',\n    value: function mixin(source) {\n      draft.mixin(this, source);\n    }\n  }]);\n\n  return Element;\n})();\n\ndraft.Element.mixin(['event', 'transform']);\n\ndraft.Group = (function (_draft$Element) {\n  _inherits(Group, _draft$Element);\n\n  function Group(name) {\n    _classCallCheck(this, Group);\n\n    // Initialize children array\n\n    var _this4 = _possibleConstructorReturn(this, Object.getPrototypeOf(Group).call(this, name));\n\n    _this4.children = [];\n    return _this4;\n  }\n\n  _createClass(Group, [{\n    key: 'child',\n    value: function child(name) {\n      var _iteratorNormalCompletion3 = true;\n      var _didIteratorError3 = false;\n      var _iteratorError3 = undefined;\n\n      try {\n        for (var _iterator3 = this.children[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n          var _child = _step3.value;\n\n          if (_child.meta.name === name) {\n            return _child;\n          }\n        }\n      } catch (err) {\n        _didIteratorError3 = true;\n        _iteratorError3 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion3 && _iterator3.return) {\n            _iterator3.return();\n          }\n        } finally {\n          if (_didIteratorError3) {\n            throw _iteratorError3;\n          }\n        }\n      }\n    }\n  }, {\n    key: 'add',\n    value: function add(child) {\n      // Add a reference to the child's parent and containing doc\n      child.parent = this;\n      child.doc = this.doc || this;\n\n      // Add the child to its type array\n      var type = child.type;\n      (child.doc.elements[type] || (child.doc.elements[type] = [])).push(child);\n      // Set the child's id\n      child._id = child.doc.elements[type].length;\n      // _id.set(child, child.doc.elements[type].length);\n\n      child.unit(this.unit());\n      if (type === 'group') {\n        child.system(this.system());\n      }\n\n      // Add the child to the end of the children array\n      this.children.push(child);\n\n      // Fire the 'add' event to all listeners\n      this.fire('add', child);\n\n      return this;\n    }\n  }, {\n    key: 'append',\n    value: function append(child) {\n      this.add(child);\n      return child;\n    }\n  }, {\n    key: 'remove',\n    value: function remove(child) {\n      // BACKLOG: return child?\n      this.fire('remove', child);\n      return this;\n    }\n  }, {\n    key: 'map',\n    get: function get() {\n      return ['x', 'y', 'z', 'alpha'];\n    }\n  }, {\n    key: 'firstChild',\n    get: function get() {\n      return this.children[0];\n    }\n  }, {\n    key: 'lastChild',\n    get: function get() {\n      return this.children[this.children.length - 1];\n    }\n  }]);\n\n  return Group;\n})(draft.Element);\n\ndraft.Group.mixin(['system', 'translate', 'rotate']);\n\ndraft.Group.mixin({\n  group: function group(name) {\n    return this.append(new draft.Group(name));\n  }\n});\n\ndraft.Doc = (function (_draft$Group) {\n  _inherits(Doc, _draft$Group);\n\n  function Doc(name) {\n    _classCallCheck(this, Doc);\n\n    // Initialize elements container\n\n    var _this5 = _possibleConstructorReturn(this, Object.getPrototypeOf(Doc).call(this, name));\n\n    _this5.elements = {};\n\n    _this5.prop({\n      system: draft.defaults.system,\n      unit: draft.defaults.unit\n    });\n    return _this5;\n  }\n\n  return Doc;\n})(draft.Group);\n\ndraft.doc = function doc(name) {\n  var newDoc = new draft.Doc(name);\n\n  (draft.docs || (draft.docs = [])).push(newDoc);\n  newDoc._id = draft.docs.length;\n\n  return newDoc;\n};\n\ndraft.View = (function (_draft$Element2) {\n  _inherits(View, _draft$Element2);\n\n  function View() {\n    _classCallCheck(this, View);\n\n    return _possibleConstructorReturn(this, Object.getPrototypeOf(View).apply(this, arguments));\n  }\n\n  _createClass(View, [{\n    key: 'map',\n\n    /* render(renderer) {\n      this['render' + renderer.toUpperCase()]();\n    } */\n\n    get: function get() {\n      return ['x', 'y', 'z', 'alpha', 'width', 'height'];\n    }\n  }, {\n    key: 'aspectRatio',\n    get: function get() {\n      var width = draft.types.length(this.prop('width')).value;\n      var height = draft.types.length(this.prop('height')).value;\n\n      var gcd = function gcd(a, b) {\n        return b ? gcd(b, a % b) : a;\n      };\n\n      gcd = gcd(width, height);\n      return width / gcd + ':' + height / gcd;\n    }\n  }]);\n\n  return View;\n})(draft.Element);\n\ndraft.View.mixin(['translate', 'rotate', 'scale']);\n\ndraft.Group.mixin({\n  // TODO: get group bounding box for default size\n\n  view: function view(name) {\n    return this.append(new draft.View(name)).size(100, 100);\n  }\n});\n\ndraft.Point = (function (_draft$Element3) {\n  _inherits(Point, _draft$Element3);\n\n  function Point() {\n    _classCallCheck(this, Point);\n\n    return _possibleConstructorReturn(this, Object.getPrototypeOf(Point).apply(this, arguments));\n  }\n\n  _createClass(Point, [{\n    key: 'map',\n    get: function get() {\n      // TODO: remove xyz from element properties\n      return ['x', 'y', 'z', 'stroke'];\n    }\n  }]);\n\n  return Point;\n})(draft.Element);\n\ndraft.Point.mixin(['translate', 'stroke']);\n\ndraft.Group.mixin({\n  point: function point(name) {\n    return this.append(new draft.Point(name));\n  }\n});\n\ndraft.Line = (function (_draft$Point) {\n  _inherits(Line, _draft$Point);\n\n  function Line() {\n    _classCallCheck(this, Line);\n\n    return _possibleConstructorReturn(this, Object.getPrototypeOf(Line).apply(this, arguments));\n  }\n\n  _createClass(Line, [{\n    key: 'map',\n    get: function get() {\n      var _get2;\n\n      // TODO: remove angles from element properties\n      return (_get2 = _get(Object.getPrototypeOf(Line.prototype), 'map', this)).concat.apply(_get2, ['alpha', 'width']);\n    }\n  }]);\n\n  return Line;\n})(draft.Point);\n\n// TODO: skew transformation?\ndraft.Line.mixin(['rotate', 'scale']);\n\ndraft.Group.mixin({\n  line: function line(name) {\n    return this.append(new draft.Line(name)).size(100);\n  }\n});\n\ndraft.Shape = draft.Line.extend('Shape', {\n  get map() {\n    return ['x', 'y', 'z', 'alpha', 'width', 'height', 'skewX', 'skewY', 'fill', 'stroke'];\n  }\n});\n\ndraft.Shape.mixin(['skew', 'fill']);\n\ndraft.Rectangle = draft.Shape.extend('Rectangle', {\n  construct: function construct(width, height) {\n    this.size(width || 75, height || 100);\n  },\n\n  // Hehehe\n  get rekt() {\n    return Math.floor(Math.random() * 101) + '% rekt';\n  }\n});\n\ndraft.Group.mixin({\n  // TODO: rename to rectangle(name)\n\n  rect: function rect() {\n    return this.rectangle.apply(this, arguments);\n  }\n});\n\ndraft.Square = draft.Rectangle.extend('Square', {\n  construct: function construct(width) {\n    this.size(width || 100);\n  },\n\n  get map() {\n    return ['x', 'y', 'z', 'alpha', 'width', 'skewX', 'skewY', 'fill', 'stroke'];\n  }\n});\n\ndraft.Ellipse = draft.Shape.extend('Ellipse', {\n  construct: function construct(width, height) {\n    this.size(width || 75, height || 100);\n  }\n});\n\ndraft.Circle = draft.Ellipse.extend('Circle', {\n  construct: function construct(width) {\n    this.size(width || 100);\n  },\n\n  get map() {\n    return ['x', 'y', 'z', 'alpha', 'width', 'skewX', 'skewY', 'fill', 'stroke'];\n  },\n  /* get propMap() {\n    return {\n      diameter: ['width', 'height']\n    };\n  }, */\n  radius: function radius(r) {\n    return this.size(r * 2, r * 2);\n  }\n});\nreturn draft;\n}));\n"],"sourceRoot":"/source/"}