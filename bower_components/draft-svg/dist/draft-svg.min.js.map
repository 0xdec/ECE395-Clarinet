{"version":3,"sources":["draft-svg.min.js","draft-svg.js"],"names":["_svg","WeakMap","_maxWidth","_maxHeight","draft","View","mixin","svg","width","height","_this","this","types","length","get","calcX","element","prop","calcY","domPrefix","doc","domID","set","has","_render","listener","NS","VERSION","node","_listener2","type","create","svgType","document","createElementNS","Group","renderChild","child","childNode","appendChild","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","children","Symbol","iterator","next","done","value","err","on","removeChild","getElementByID","val","size","target","setAttribute","link","call","_arr","_i","id","hasStyle","_arr2","_i2","style","push","styleListener","replace","color","stroke","test","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","_arr3","_i3","defaults","apply","addEventListener","fire","targetWidth","targetHeight","map","valueOf","join","zoom","Math","min","svgWidth","svgHeight","parent"],"mappings":"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","file":"draft-svg.min.js","sourcesContent":[null,"/*\n* draft-svg - A plugin for draft.js that renders models using SVG\n* version v0.2.0\n* http://draft.js.org\n*\n* copyright Jordi Pakey-Rodriguez <me@jordi.codes>\n* license MIT\n*\n* BUILT: Sat Feb 27 2016 02:25:10 GMT-0600 (CST)\n*/\n'use strict';\n\n(function () {\n  // TODO: use draft.WeakMap\n  var _svg = new WeakMap();\n  var _maxWidth = new WeakMap();\n  var _maxHeight = new WeakMap();\n\n  draft.View.mixin({\n    svg: function svg(width, height) {\n      var _this = this;\n\n      width = width ? draft.types.length(width) : _maxWidth.get(this);\n      height = height ? draft.types.length(height) : _maxHeight.get(this);\n\n      var calcX = function calcX(element) {\n        return (element.prop('x') || 0) - element.prop('width') / 2;\n      };\n      var calcY = function calcY(element) {\n        return -(element.prop('y') || 0) - element.prop('height') / 2;\n      };\n\n      var domPrefix = this.doc.domID + ':' + this.domID + ':svg';\n      var domID = function domID(element) {\n        return domPrefix + ':' + element.domID;\n      };\n\n      _maxWidth.set(this, width || this.prop('width'));\n      _maxHeight.set(this, height || this.prop('height'));\n\n      if (!_svg.has(this)) {\n        var _render;\n\n        var svg;\n        var listener;\n\n        (function () {\n          var NS = 'http://www.w3.org/2000/svg';\n          // const XMLNS = 'http://www.w3.org/2000/xmlns/';\n          // const XLINK = 'http://www.w3.org/1999/xlink';\n          var VERSION = '1.1';\n\n          _render = function render(element) {\n            // console.info('rendering svg:', element.domID);\n\n            // TODO: separate listener for each property?\n            var node, _listener2;\n            var type = element.type;\n            var create = function create(svgType) {\n              return document.createElementNS(NS, svgType);\n            };\n\n            if (element instanceof draft.Group) {\n              node = create('g');\n\n              var renderChild = function renderChild(child) {\n                var childNode = _render(child);\n                if (childNode) {\n                  node.appendChild(childNode);\n                }\n              };\n\n              var _iteratorNormalCompletion = true;\n              var _didIteratorError = false;\n              var _iteratorError = undefined;\n\n              try {\n                for (var _iterator = element.children[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n                  var child = _step.value;\n\n                  renderChild(child);\n                }\n              } catch (err) {\n                _didIteratorError = true;\n                _iteratorError = err;\n              } finally {\n                try {\n                  if (!_iteratorNormalCompletion && _iterator.return) {\n                    _iterator.return();\n                  }\n                } finally {\n                  if (_didIteratorError) {\n                    throw _iteratorError;\n                  }\n                }\n              }\n\n              element.on('add', renderChild);\n\n              element.on('remove', function (child) {\n                node.removeChild(document.getElementByID(domID(child)));\n              });\n\n              type = 'group';\n            }\n\n            switch (type) {\n              case 'line':\n                node = create('line');\n\n                _listener2 = function listener(prop, val) {\n                  var size;\n\n                  switch (prop) {\n                    case 'y':\n                      val *= -1;\n                      size = 0;\n                      break;\n                    case 'width':\n                      val = this.target.prop('x');\n                    // Falls through\n                    case 'x':\n                      prop = 'x';\n                      size = this.target.prop('width') / 2;\n                      break;\n                    default:\n                      return;\n                  }\n\n                  node.setAttribute(prop + '1', val - size);\n                  node.setAttribute(prop + '2', val + size);\n                };\n\n                break;\n              case 'group':\n              case 'rectangle':\n                node = node || create('rect');\n\n                _listener2 = function listener(prop, val) {\n                  var link;\n\n                  switch (prop) {\n                    case 'width':\n                      link = 'x';\n                    // Falls through\n                    case 'height':\n                      link = link || 'y';\n                      _listener2.call(this, link, this.target.prop(link));\n                      break;\n                    case 'y':\n                      link = 'height';\n                      val *= -1;\n                    // Falls through\n                    case 'x':\n                      link = link || 'width';\n                      val -= this.target.prop(link) / 2;\n                      break;\n                    default:\n                      return;\n                  }\n\n                  node.setAttribute(prop, val);\n                };\n\n                break;\n              case 'square':\n                node = node || create('rect');\n\n                _listener2 = function _listener(prop, val) {\n                  switch (prop) {\n                    case 'width':\n                      node.setAttribute('height', val);\n\n                      var _arr = ['x', 'y'];\n                      for (var _i = 0; _i < _arr.length; _i++) {\n                        var link = _arr[_i];\n                        _listener2.call(this, link, this.target.prop(link));\n                      }\n\n                      break;\n                    case 'y':\n                      val *= -1;\n                    // Falls through\n                    case 'x':\n                      val -= this.target.prop('width') / 2;\n                      break;\n                    default:\n                      return;\n                  }\n\n                  node.setAttribute(prop, val);\n                };\n\n                break;\n              case 'ellipse':\n                node = create('ellipse');\n\n                _listener2 = function _listener2(prop, val) {\n                  switch (prop) {\n                    case 'width':\n                      prop = 'rx';\n                      val.value /= 2;\n                      break;\n                    case 'height':\n                      prop = 'ry';\n                      val.value /= 2;\n                      break;\n                    case 'y':\n                      val.value *= -1;\n                    // Falls through\n                    case 'x':\n                      prop = 'c' + prop;\n                      break;\n                    default:\n                      return;\n                  }\n\n                  node.setAttribute(prop, val);\n                };\n\n                break;\n              case 'circle':\n                node = create('circle');\n\n                _listener2 = function _listener2(prop, val) {\n                  switch (prop) {\n                    case 'diameter':\n                    case 'width':\n                      prop = 'r';\n                      val.value /= 2;\n                      break;\n                    case 'y':\n                      val.value *= -1;\n                    // Falls through\n                    case 'x':\n                      prop = 'c' + prop;\n                      break;\n                    default:\n                      return;\n                  }\n\n                  node.setAttribute(prop, val);\n                };\n\n                break;\n              default:\n                return;\n            }\n\n            // TODO: support all elements\n            node.id = domID(element);\n\n            var hasStyle = [];\n            var _arr2 = ['fill', 'stroke'];\n            for (var _i2 = 0; _i2 < _arr2.length; _i2++) {\n              var style = _arr2[_i2];\n              if (style in element) {\n                hasStyle.push(style);\n              }\n            }\n\n            if (hasStyle.length) {\n              var styleListener = function styleListener(prop, val) {\n                prop = prop.replace('.color', '').replace('.', '-');\n\n                var color = /^(fill|stroke)(-opacity)?$/;\n                var stroke = /^stroke-(width)?$/;\n\n                if (color.test(prop) || stroke.test(prop)) {\n                  node.setAttribute(prop, val);\n                }\n              };\n\n              var _iteratorNormalCompletion2 = true;\n              var _didIteratorError2 = false;\n              var _iteratorError2 = undefined;\n\n              try {\n                for (var _iterator2 = hasStyle[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n                  var style = _step2.value;\n                  var _arr3 = ['color', 'opacity', 'width'];\n\n                  for (var _i3 = 0; _i3 < _arr3.length; _i3++) {\n                    var prop = _arr3[_i3];\n                    prop = style + '.' + prop;\n                    var val = element.prop(prop) || draft.defaults[prop];\n\n                    styleListener(prop, val);\n                  }\n                }\n              } catch (err) {\n                _didIteratorError2 = true;\n                _iteratorError2 = err;\n              } finally {\n                try {\n                  if (!_iteratorNormalCompletion2 && _iterator2.return) {\n                    _iterator2.return();\n                  }\n                } finally {\n                  if (_didIteratorError2) {\n                    throw _iteratorError2;\n                  }\n                }\n              }\n\n              element.on('change', styleListener);\n            }\n\n            for (var prop in element.prop()) {\n              _listener2.apply({ target: element }, [prop, element.prop(prop)]);\n            }\n\n            element.on('change', _listener2);\n\n            node.addEventListener('click', function () {\n              element.fire('click');\n            });\n\n            return node;\n          };\n\n          svg = document.createElementNS(NS, 'svg');\n\n          _svg.set(_this, svg);\n          svg.setAttribute('xmlns', NS);\n          svg.setAttribute('version', VERSION);\n          // svg.setAttributeNS(XMLNS, 'xmlns:xlink', XLINK);\n\n          svg.id = domID(_this);\n\n          listener = function listener(prop) {\n            if (prop === 'width' || prop === 'height') {\n              var targetWidth = this.target.prop('width');\n              var targetHeight = this.target.prop('height');\n\n              // 1 SVG user unit = 1px\n              svg.setAttribute('viewBox', [calcX(this.target), calcY(this.target), targetWidth, targetHeight].map(function (val) {\n                return val.valueOf();\n              }).join(' '));\n\n              var zoom = Math.min(_maxWidth.get(this.target) / targetWidth, _maxHeight.get(this.target) / targetHeight);\n\n              var svgWidth = targetWidth * zoom;\n              var svgHeight = targetHeight * zoom;\n\n              _svg.get(this.target).setAttribute('width', svgWidth);\n              _svg.get(this.target).setAttribute('height', svgHeight);\n\n              // console.info('aspect ratio:', this.target.aspectRatio);\n            }\n          };\n\n          listener.apply({ target: _this }, ['width']);\n          listener.apply({ target: _this }, ['height']);\n\n          _this.on('change', listener);\n\n          svg.appendChild(_render(_this.parent));\n        })();\n      }\n\n      return _svg.get(this);\n    }\n  });\n})();"],"sourceRoot":"/source/"}